- hosts: localhost
  connection: local
  gather_facts: false
  tasks:
    - name: create ssh config for jumphost in tower
      copy:
        content: |
          Host {{ JUMPBOX }}
           Hostname {{ JUMPBOX }}
           IdentityFile ~/.ssh/openstack.pem
           ForwardAgent yes
           User cloud-user
           StrictHostKeyChecking no
           PasswordAuthentication no
          Host 10.10.10.*
           User cloud-user
           IdentityFile ~/.ssh/openstack.pem
           ProxyCommand ssh cloud-user@{{ JUMPBOX }} -W %h:%p -vvv
           StrictHostKeyChecking no
        dest: "/var/lib/awx/.ssh/config"
        owner: awx
        group: awx
        mode: 0400
          
    - name: where am i
      command: "ls -al"

- hosts: jumpbox
  gather_facts: false
  tasks:

   - name: Fetch Instance Info
     os_server_facts:
      cloud: ospcloud
      region_name: RegionOne
     register: result
   - name: Add host to
     add_host:
      name: "{{ item.public_v4 }}"
      group: "{{ item.metadata.group }}"
     with_items: "{{result.ansible_facts.openstack_servers}}"
   - name: Add host
     add_host:
      name: "{{ item.public_v4 }}"
      group: "{{ item.metadata.deployment_name }}"
     with_items: "{{result.ansible_facts.openstack_servers}}"

   - name: Verify service
     uri:
       url: "http://{{ hostvars[ item ]['inventory_hostname']}}"
       return_content: yes
     with_items:
       - "{{ groups['frontends']}}"
     register: webpage
#      until: webpage.status == "200"
#      retries: 2
#      delay: 5 

   - name: print webpage
     debug:
       var: webpage

   - name: print webpage content
     debug:
       var: webpage.results[0].content

   - name: Fail if host address is not in the page content
     fail:
     when: "'Ansible' not in webpage.results[0].content"

#- include: osp-smoke-test.yml
#- include: good-playbook.yml

#- hosts: webservers
#  gather_facts: false
#  become: yes
#  tasks:
#  - name: install apache/httpd
#    yum:
#      name: httpd
#      state: latest
#  - name: start and enable apache/httpd service
#    service:
#      name: httpd
#      state: started
#      enabled: yes
#  - name: create default index.html
#    copy:
#     content: "Hello World"
#     dest: /var/www/html/index.html
